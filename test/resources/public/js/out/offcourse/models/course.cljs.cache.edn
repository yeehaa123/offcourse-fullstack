;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name offcourse.models.course, :imports nil, :requires {cp offcourse.models.checkpoint, offcourse.models.checkpoint offcourse.models.checkpoint}, :uses nil, :defs {find-checkpoint {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/models/course.cljs", :line 19, :column 7, :end-line 19, :end-column 22, :arglists (quote ([course checkpoint-id]))}, :name offcourse.models.course/find-checkpoint, :variadic false, :file "src/cljs/offcourse/models/course.cljs", :end-column 22, :method-params ([course checkpoint-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([course checkpoint-id]))}, needs-resources? {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/models/course.cljs", :line 22, :column 7, :end-line 22, :end-column 23, :arglists (quote ([course]))}, :name offcourse.models.course/needs-resources?, :variadic false, :file "src/cljs/offcourse/models/course.cljs", :end-column 23, :method-params ([course]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([course]))}, new-course {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/models/course.cljs", :line 6, :column 7, :end-line 6, :end-column 17, :arglists (quote ([course id]))}, :name offcourse.models.course/new-course, :variadic false, :file "src/cljs/offcourse/models/course.cljs", :end-column 17, :method-params ([course id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([course id]))}, highlight {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/models/course.cljs", :line 31, :column 7, :end-line 31, :end-column 16, :arglists (quote ([course checkpoint-id highlight]))}, :name offcourse.models.course/highlight, :variadic false, :file "src/cljs/offcourse/models/course.cljs", :end-column 16, :method-params ([course checkpoint-id highlight]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([course checkpoint-id highlight]))}, next-checkpoint-id {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/models/course.cljs", :line 12, :column 7, :end-line 12, :end-column 25, :arglists (quote ([course]))}, :name offcourse.models.course/next-checkpoint-id, :variadic false, :file "src/cljs/offcourse/models/course.cljs", :end-column 25, :method-params ([course]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([course]))}, add-checkpoint {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/models/course.cljs", :line 15, :column 7, :end-line 15, :end-column 21, :arglists (quote ([course checkpoint]))}, :name offcourse.models.course/add-checkpoint, :variadic false, :file "src/cljs/offcourse/models/course.cljs", :end-column 21, :method-params ([course checkpoint]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([course checkpoint]))}, add-temp-checkpoint {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/models/course.cljs", :line 9, :column 7, :end-line 9, :end-column 26, :arglists (quote ([course checkpoint]))}, :name offcourse.models.course/add-temp-checkpoint, :variadic false, :file "src/cljs/offcourse/models/course.cljs", :end-column 26, :method-params ([course checkpoint]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([course checkpoint]))}, toggle-done {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/models/course.cljs", :line 25, :column 7, :end-line 25, :end-column 18, :arglists (quote ([course checkpoint-id]))}, :name offcourse.models.course/toggle-done, :variadic false, :file "src/cljs/offcourse/models/course.cljs", :end-column 18, :method-params ([course checkpoint-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([course checkpoint-id]))}, ->Course {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/models/course.cljs", :line 4, :column 12, :end-line 4, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([id goal checkpoints]))}, :name offcourse.models.course/->Course, :variadic false, :file "src/cljs/offcourse/models/course.cljs", :end-column 18, :method-params ([id goal checkpoints]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 4, :end-line 4, :max-fixed-arity 3, :fn-var true, :arglists (quote ([id goal checkpoints]))}, map->Course {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/models/course.cljs", :line 4, :column 12, :end-line 4, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__25135]))}, :name offcourse.models.course/map->Course, :variadic false, :file "src/cljs/offcourse/models/course.cljs", :end-column 18, :method-params ([G__25135]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__25135]))}, augment-checkpoint {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/models/course.cljs", :line 28, :column 7, :end-line 28, :end-column 25, :arglists (quote ([course checkpoint-id resource]))}, :name offcourse.models.course/augment-checkpoint, :variadic false, :file "src/cljs/offcourse/models/course.cljs", :end-column 25, :method-params ([course checkpoint-id resource]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([course checkpoint-id resource]))}, Course {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name offcourse.models.course/Course, :file "src/cljs/offcourse/models/course.cljs", :end-column 18, :type true, :column 12, :internal-ctor true, :line 4, :record true, :end-line 4, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:new :goal :highlighted :checkpoints goal :id :resource checkpoints id}, :order [:id :goal :checkpoints id goal checkpoints :new :resource :highlighted]}, :doc nil}