;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name offcourse.actions.index, :imports nil, :requires {offcourse.models.action offcourse.models.action}, :uses {>>! offcourse.models.action}, :defs {init {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/actions/index.cljs", :line 4, :column 7, :end-line 4, :end-column 11, :arglists (quote ([{output :channel-out}]))}, :name offcourse.actions.index/init, :variadic false, :file "src/cljs/offcourse/actions/index.cljs", :end-column 11, :method-params ([p__27086]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{output :channel-out}]))}, refresh {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/actions/index.cljs", :line 7, :column 11, :end-line 7, :end-column 18, :arglists (quote ([]))}, :name offcourse.actions.index/refresh, :variadic false, :file "src/cljs/offcourse/actions/index.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:channel-out :reloaded-code}, :order [:channel-out :reloaded-code]}, :doc nil}