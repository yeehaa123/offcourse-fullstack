;; Analyzed by ClojureScript 1.7.145
{:use-macros {defroute secretary.core, go-loop cljs.core.async.macros}, :excludes #{}, :name offcourse.history.service, :imports {Html5History goog.history.Html5History, EventType goog.history.EventType}, :requires {secretary secretary.core, secretary.core secretary.core, goog.events goog.events, cljs.core.async cljs.core.async, Html5History goog.history.Html5History, EventType goog.history.EventType}, :uses {<! cljs.core.async, >! cljs.core.async}, :defs {handle-url-change {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/history/service.cljs", :line 18, :column 7, :end-line 18, :end-column 24, :arglists (quote ([e]))}, :name offcourse.history.service/handle-url-change, :variadic false, :file "src/cljs/offcourse/history/service.cljs", :end-column 24, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, create-token {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/history/service.cljs", :line 43, :column 7, :end-line 43, :end-column 19, :arglists (quote ([{level :level, :as location-data}]))}, :name offcourse.history.service/create-token, :variadic false, :file "src/cljs/offcourse/history/service.cljs", :end-column 19, :method-params ([p__27252]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{level :level, :as location-data}]))}, get-token {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/history/service.cljs", :line 8, :column 7, :end-line 8, :end-column 16, :arglists (quote ([]))}, :name offcourse.history.service/get-token, :variadic false, :file "src/cljs/offcourse/history/service.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, course-token {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/history/service.cljs", :line 36, :column 7, :end-line 36, :end-column 19, :arglists (quote ([location-data]))}, :name offcourse.history.service/course-token, :variadic false, :file "src/cljs/offcourse/history/service.cljs", :end-column 19, :method-params ([location-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([location-data]))}, listen-for-actions {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/history/service.cljs", :line 54, :column 7, :end-line 54, :end-column 25, :arglists (quote ([{input :channel-in}]))}, :name offcourse.history.service/listen-for-actions, :variadic false, :file "src/cljs/offcourse/history/service.cljs", :end-column 25, :method-params ([p__27260]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{input :channel-in}]))}, init! {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/history/service.cljs", :line 63, :column 7, :end-line 63, :end-column 12, :arglists (quote ([config]))}, :name offcourse.history.service/init!, :variadic false, :file "src/cljs/offcourse/history/service.cljs", :end-column 12, :method-params ([config]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([config]))}, history {:name offcourse.history.service/history, :file "src/cljs/offcourse/history/service.cljs", :line 64, :column 3, :end-line 64, :end-column 19, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/history/service.cljs", :line 64, :column 12, :end-line 64, :end-column 19}}, nav! {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/history/service.cljs", :line 50, :column 7, :end-line 50, :end-column 11, :arglists (quote ([location-data]))}, :name offcourse.history.service/nav!, :variadic false, :file "src/cljs/offcourse/history/service.cljs", :end-column 11, :method-params ([location-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([location-data]))}, make-history {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/history/service.cljs", :line 11, :column 7, :end-line 11, :end-column 19, :arglists (quote ([]))}, :name offcourse.history.service/make-history, :variadic false, :file "src/cljs/offcourse/history/service.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, checkpoint-token {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/history/service.cljs", :line 39, :column 7, :end-line 39, :end-column 23, :arglists (quote ([location-data]))}, :name offcourse.history.service/checkpoint-token, :variadic false, :file "src/cljs/offcourse/history/service.cljs", :end-column 23, :method-params ([location-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([location-data]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, secretary secretary.core, secretary.core secretary.core}, :cljs.analyzer/constants {:seen #{:home :payload :else :recur :type :checkpoint-id :level :collection-name :channel-in :course-id}, :order [:course-id :checkpoint-id :level :collection-name :channel-in :recur :type :payload :home :else]}, :doc nil}