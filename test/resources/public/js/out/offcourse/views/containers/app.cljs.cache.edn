;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name offcourse.views.containers.app, :imports nil, :requires {css offcourse.helpers.css, offcourse.helpers.css offcourse.helpers.css, offcourse.views.containers.sidebar offcourse.views.containers.sidebar, offcourse.views.containers.topbar offcourse.views.containers.topbar, offcourse.views.containers.cards offcourse.views.containers.cards, d quiescent.dom, quiescent.dom quiescent.dom}, :uses {Cards offcourse.views.containers.cards, Sidebar offcourse.views.containers.sidebar, Topbar offcourse.views.containers.topbar}, :defs {App {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/views/containers/app.cljs", :line 8, :column 7, :end-line 8, :end-column 10, :arglists (quote ([handlers {:keys [viewmodel mode]}]))}, :name offcourse.views.containers.app/App, :variadic false, :file "src/cljs/offcourse/views/containers/app.cljs", :end-column 10, :method-params ([handlers p__24871]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([handlers {:keys [viewmodel mode]}]))}}, :require-macros {d quiescent.dom, quiescent.dom quiescent.dom}, :cljs.analyzer/constants {:seen #{:mode :viewmodel :className}, :order [:viewmodel :mode :className]}, :doc nil}