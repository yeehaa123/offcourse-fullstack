;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name offcourse.appstate.model, :imports nil, :requires {offcourse.models.action offcourse.models.action, co offcourse.models.course, offcourse.models.course offcourse.models.course, cp offcourse.models.checkpoint, offcourse.models.checkpoint offcourse.models.checkpoint, vm offcourse.appstate.viewmodel, offcourse.appstate.viewmodel offcourse.appstate.viewmodel}, :uses {respond offcourse.models.action}, :defs {refresh-checkpoint {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 35, :column 7, :end-line 35, :end-column 25, :arglists (quote ([{:keys [level], :as appstate} course]))}, :name offcourse.appstate.model/refresh-checkpoint, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 25, :method-params ([p__26177 course]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [level], :as appstate} course]))}, set-mode {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 20, :column 7, :end-line 20, :end-column 15, :arglists (quote ([appstate mode]))}, :name offcourse.appstate.model/set-mode, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 15, :method-params ([appstate mode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([appstate mode]))}, highlight-collection {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 52, :column 7, :end-line 52, :end-column 27, :arglists (quote ([appstate {:keys [course-id checkpoint-id highlight]}]))}, :name offcourse.appstate.model/highlight-collection, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 27, :method-params ([appstate p__26193]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([appstate {:keys [course-id checkpoint-id highlight]}]))}, ->AppState {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 7, :column 12, :end-line 7, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([level mode course-collections viewmodel]))}, :name offcourse.appstate.model/->AppState, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 20, :method-params ([level mode course-collections viewmodel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 7, :end-line 7, :max-fixed-arity 4, :fn-var true, :arglists (quote ([level mode course-collections viewmodel]))}, update-checkpoint {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 39, :column 7, :end-line 39, :end-column 24, :arglists (quote ([{:keys [level], :as appstate} course]))}, :name offcourse.appstate.model/update-checkpoint, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 24, :method-params ([p__26182 course]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [level], :as appstate} course]))}, map->AppState {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 7, :column 12, :end-line 7, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__26170]))}, :name offcourse.appstate.model/map->AppState, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 20, :method-params ([G__26170]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__26170]))}, refresh-collection {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 45, :column 7, :end-line 45, :end-column 25, :arglists (quote ([{:keys [level], :as appstate} collection]))}, :name offcourse.appstate.model/refresh-collection, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 25, :method-params ([p__26187 collection]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [level], :as appstate} collection]))}, highlight-course {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 56, :column 7, :end-line 56, :end-column 23, :arglists (quote ([appstate {:keys [checkpoint-id highlight]}]))}, :name offcourse.appstate.model/highlight-course, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 23, :method-params ([appstate p__26199]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([appstate {:keys [checkpoint-id highlight]}]))}, refresh-course {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 49, :column 7, :end-line 49, :end-column 21, :arglists (quote ([appstate course]))}, :name offcourse.appstate.model/refresh-course, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 21, :method-params ([appstate course]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([appstate course]))}, add-checkpoint {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 30, :column 7, :end-line 30, :end-column 21, :arglists (quote ([appstate course]))}, :name offcourse.appstate.model/add-checkpoint, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 21, :method-params ([appstate course]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([appstate course]))}, update-viewmodel {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 17, :column 7, :end-line 17, :end-column 23, :arglists (quote ([appstate fn]))}, :name offcourse.appstate.model/update-viewmodel, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 23, :method-params ([appstate fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([appstate fn]))}, toggle-mode {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 26, :column 7, :end-line 26, :end-column 18, :arglists (quote ([appstate]))}, :name offcourse.appstate.model/toggle-mode, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 18, :method-params ([appstate]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([appstate]))}, set-viewmodel {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 14, :column 7, :end-line 14, :end-column 20, :arglists (quote ([appstate viewmodel]))}, :name offcourse.appstate.model/set-viewmodel, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 20, :method-params ([appstate viewmodel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([appstate viewmodel]))}, AppState {:num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name offcourse.appstate.model/AppState, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 20, :type true, :column 12, :internal-ctor true, :line 7, :record true, :end-line 7, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, set-level {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 23, :column 7, :end-line 23, :end-column 16, :arglists (quote ([appstate level]))}, :name offcourse.appstate.model/set-level, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 16, :method-params ([appstate level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([appstate level]))}, new-appstate {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/model.cljs", :line 9, :column 7, :end-line 9, :end-column 19, :arglists (quote ([]))}, :name offcourse.appstate.model/new-appstate, :variadic false, :file "src/cljs/offcourse/appstate/model.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:highlight :new :mode :type :viewmodel :checkpoint-id :level mode viewmodel :course-collections :id :collection-name :initial level course-collections :course-id :curate :learn}, :order [:level :mode :course-collections :viewmodel level mode course-collections viewmodel :type :initial :learn :curate :id :checkpoint-id :new :collection-name :course-id :highlight]}, :doc nil}