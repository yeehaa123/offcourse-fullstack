;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name offcourse.appstate.store, :imports nil, :requires {model offcourse.appstate.model, offcourse.appstate.model offcourse.appstate.model, utils offcourse.appstate.utils, offcourse.appstate.utils offcourse.appstate.utils, co offcourse.models.course, offcourse.models.course offcourse.models.course, offcourse.models.action offcourse.models.action}, :uses {respond offcourse.models.action}, :defs {refresh-checkpoint {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/store.cljs", :line 15, :column 8, :end-line 15, :end-column 26, :private true, :arglists (quote ([{store :store}]))}, :private true, :name offcourse.appstate.store/refresh-checkpoint, :variadic false, :file "src/cljs/offcourse/appstate/store.cljs", :end-column 26, :method-params ([p__26229]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{store :store}]))}, set-mode {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/store.cljs", :line 36, :column 7, :end-line 36, :end-column 15, :arglists (quote ([{mode :mode}]))}, :name offcourse.appstate.store/set-mode, :variadic false, :file "src/cljs/offcourse/appstate/store.cljs", :end-column 15, :method-params ([p__26247]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{mode :mode}]))}, refresh {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/store.cljs", :line 45, :column 7, :end-line 45, :end-column 14, :arglists (quote ([payload]))}, :name offcourse.appstate.store/refresh, :variadic false, :file "src/cljs/offcourse/appstate/store.cljs", :end-column 14, :method-params ([payload]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([payload]))}, refresh-collection {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/store.cljs", :line 24, :column 8, :end-line 24, :end-column 26, :private true, :arglists (quote ([{:keys [store]}]))}, :private true, :name offcourse.appstate.store/refresh-collection, :variadic false, :file "src/cljs/offcourse/appstate/store.cljs", :end-column 26, :method-params ([p__26235]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [store]}]))}, refresh-course {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/store.cljs", :line 28, :column 8, :end-line 28, :end-column 22, :private true, :arglists (quote ([{:keys [store]}]))}, :private true, :name offcourse.appstate.store/refresh-course, :variadic false, :file "src/cljs/offcourse/appstate/store.cljs", :end-column 22, :method-params ([p__26241]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [store]}]))}, appstate {:name offcourse.appstate.store/appstate, :file "src/cljs/offcourse/appstate/store.cljs", :line 7, :column 1, :end-line 7, :end-column 14, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/store.cljs", :line 7, :column 6, :end-line 7, :end-column 14}}, toggle-mode {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/store.cljs", :line 39, :column 7, :end-line 39, :end-column 18, :arglists (quote ([]))}, :name offcourse.appstate.store/toggle-mode, :variadic false, :file "src/cljs/offcourse/appstate/store.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-appstate! {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/store.cljs", :line 9, :column 8, :end-line 9, :end-column 24, :private true, :arglists (quote ([fn]))}, :private true, :name offcourse.appstate.store/update-appstate!, :variadic false, :file "src/cljs/offcourse/appstate/store.cljs", :end-column 24, :method-params ([fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fn]))}, set-level {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/store.cljs", :line 42, :column 7, :end-line 42, :end-column 16, :arglists (quote ([payload]))}, :name offcourse.appstate.store/set-level, :variadic false, :file "src/cljs/offcourse/appstate/store.cljs", :end-column 16, :method-params ([payload]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([payload]))}, force-refresh {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/store.cljs", :line 66, :column 7, :end-line 66, :end-column 20, :arglists (quote ([]))}, :name offcourse.appstate.store/force-refresh, :variadic false, :file "src/cljs/offcourse/appstate/store.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, toggle-highlight {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/store.cljs", :line 52, :column 7, :end-line 52, :end-column 23, :arglists (quote ([payload]))}, :name offcourse.appstate.store/toggle-highlight, :variadic false, :file "src/cljs/offcourse/appstate/store.cljs", :end-column 23, :method-params ([payload]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([payload]))}, commit-data {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/appstate/store.cljs", :line 58, :column 7, :end-line 58, :end-column 18, :arglists (quote ([{:keys [course-id checkpoint-id], :as payload}]))}, :name offcourse.appstate.store/commit-data, :variadic false, :file "src/cljs/offcourse/appstate/store.cljs", :end-column 18, :method-params ([p__26270]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [course-id checkpoint-id], :as payload}]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:not-found-resource :payload :store :checkpoint :requested-commit :new :mode :reloaded-appstate :type :viewmodel :appstate :checkpoint-id :level :course :course-id :updated-appstate}, :order [:updated-appstate :appstate :store :level :checkpoint-id :new :not-found-resource :mode :type :course-id :course :viewmodel :checkpoint :requested-commit :payload :reloaded-appstate]}, :doc nil}