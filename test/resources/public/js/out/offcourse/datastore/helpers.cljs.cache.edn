;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name offcourse.datastore.helpers, :imports nil, :requires {offcourse.models.action offcourse.models.action}, :uses {respond offcourse.models.action}, :defs {init {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/helpers.cljs", :line 4, :column 7, :end-line 4, :end-column 11, :arglists (quote ([store]))}, :name offcourse.datastore.helpers/init, :variadic false, :file "src/cljs/offcourse/datastore/helpers.cljs", :end-column 11, :method-params ([store]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists (quote ([store]))}, respond-updated {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/helpers.cljs", :line 5, :column 9, :end-line 5, :end-column 24, :arglists (quote ([]))}, :name offcourse.datastore.helpers/respond-updated, :variadic false, :file "src/cljs/offcourse/datastore/helpers.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 5, :end-line 5, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, respond-added {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/helpers.cljs", :line 9, :column 9, :end-line 9, :end-column 22, :arglists (quote ([course-id]))}, :name offcourse.datastore.helpers/respond-added, :variadic false, :file "src/cljs/offcourse/datastore/helpers.cljs", :end-column 22, :method-params ([course-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([course-id]))}, respond-not-found {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/helpers.cljs", :line 14, :column 9, :end-line 14, :end-column 26, :arglists (quote ([type {:keys [course-id course-ids collection-name]}]))}, :name offcourse.datastore.helpers/respond-not-found, :variadic false, :file "src/cljs/offcourse/datastore/helpers.cljs", :end-column 26, :method-params ([type p__26592]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type {:keys [course-id course-ids collection-name]}]))}, respond-checked {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/helpers.cljs", :line 29, :column 9, :end-line 29, :end-column 24, :arglists (quote ([type {:keys [course-id collection-name]}]))}, :name offcourse.datastore.helpers/respond-checked, :variadic false, :file "src/cljs/offcourse/datastore/helpers.cljs", :end-column 24, :method-params ([type p__26599]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type {:keys [course-id collection-name]}]))}, respond-ignore {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/helpers.cljs", :line 39, :column 9, :end-line 39, :end-column 23, :arglists (quote ([]))}, :name offcourse.datastore.helpers/respond-ignore, :variadic false, :file "src/cljs/offcourse/datastore/helpers.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:updated-data :checked-datastore :not-found-data :store :added-checkpoint :type :ignore :course-ids :collection-name :course-id}, :order [:updated-data :store :added-checkpoint :course-id :course-ids :collection-name :not-found-data :type :checked-datastore :ignore]}, :doc nil}