;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name offcourse.datastore.store, :imports nil, :requires {model offcourse.datastore.model, offcourse.datastore.model offcourse.datastore.model, c offcourse.models.course, offcourse.models.course offcourse.models.course, set clojure.set, clojure.set clojure.set, offcourse.models.action offcourse.models.action, helpers offcourse.datastore.helpers, offcourse.datastore.helpers offcourse.datastore.helpers}, :uses {respond offcourse.models.action}, :defs {add-and-respond! {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 20, :column 8, :end-line 20, :end-column 24, :private true, :arglists (quote ([fn course-id]))}, :private true, :name offcourse.datastore.store/add-and-respond!, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 24, :method-params ([fn course-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([fn course-id]))}, get-data {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 73, :column 7, :end-line 73, :end-column 15, :arglists (quote ([{type :type, :as payload}]))}, :name offcourse.datastore.store/get-data, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 15, :method-params ([p__26726]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{type :type, :as payload}]))}, update-and-respond! {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 15, :column 8, :end-line 15, :end-column 27, :private true, :arglists (quote ([fn]))}, :private true, :name offcourse.datastore.store/update-and-respond!, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 27, :method-params ([fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fn]))}, save-checkpoint {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 50, :column 8, :end-line 50, :end-column 23, :private true, :arglists (quote ([{:keys [checkpoint-id], :as payload}]))}, :private true, :name offcourse.datastore.store/save-checkpoint, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 23, :method-params ([p__26703]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [checkpoint-id], :as payload}]))}, update-course {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 34, :column 8, :end-line 34, :end-column 21, :private true, :arglists (quote ([{:keys [course]}]))}, :private true, :name offcourse.datastore.store/update-course, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 21, :method-params ([p__26674]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [course]}]))}, update-datastore {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 79, :column 7, :end-line 79, :end-column 23, :arglists (quote ([{:keys [type], :as payload}]))}, :name offcourse.datastore.store/update-datastore, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 23, :method-params ([p__26734]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [type], :as payload}]))}, get-collection {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 55, :column 8, :end-line 55, :end-column 22, :private true, :arglists (quote ([{:keys [collection-name]}]))}, :private true, :name offcourse.datastore.store/get-collection, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 22, :method-params ([p__26708]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [collection-name]}]))}, store {:name offcourse.datastore.store/store, :file "src/cljs/offcourse/datastore/store.cljs", :line 8, :column 1, :end-line 8, :end-column 11, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 8, :column 6, :end-line 8, :end-column 11}}, add-checkpoint {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 46, :column 8, :end-line 46, :end-column 22, :private true, :arglists (quote ([{:keys [course-id checkpoint]}]))}, :private true, :name offcourse.datastore.store/add-checkpoint, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 22, :method-params ([p__26698]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [course-id checkpoint]}]))}, update-courses {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 37, :column 8, :end-line 37, :end-column 22, :private true, :arglists (quote ([{:keys [courses]}]))}, :private true, :name offcourse.datastore.store/update-courses, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 22, :method-params ([p__26680]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [courses]}]))}, toggle-done {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 40, :column 8, :end-line 40, :end-column 19, :private true, :arglists (quote ([{:keys [course-id checkpoint-id]}]))}, :private true, :name offcourse.datastore.store/toggle-done, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 19, :method-params ([p__26686]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [course-id checkpoint-id]}]))}, augment-checkpoint {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 43, :column 8, :end-line 43, :end-column 26, :private true, :arglists (quote ([{:keys [course-id checkpoint-id resource]}]))}, :private true, :name offcourse.datastore.store/augment-checkpoint, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 26, :method-params ([p__26692]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [course-id checkpoint-id resource]}]))}, update-datastore! {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 12, :column 8, :end-line 12, :end-column 25, :private true, :arglists (quote ([fn]))}, :private true, :name offcourse.datastore.store/update-datastore!, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 25, :method-params ([fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fn]))}, get-course {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 61, :column 8, :end-line 61, :end-column 18, :private true, :arglists (quote ([{:keys [course-id]}]))}, :private true, :name offcourse.datastore.store/get-course, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 18, :method-params ([p__26713]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [course-id]}]))}, update-collections {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 25, :column 8, :end-line 25, :end-column 26, :private true, :arglists (quote ([{:keys [collection-name collection-ids]}]))}, :private true, :name offcourse.datastore.store/update-collections, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 26, :method-params ([p__26668]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [collection-name collection-ids]}]))}, commit-data {:protocol-inline nil, :meta {:file "/Users/yeehaa/Documents/dev/clojure/offcourse/src/cljs/offcourse/datastore/store.cljs", :line 69, :column 7, :end-line 69, :end-column 18, :arglists (quote ([{type :type, :as payload}]))}, :name offcourse.datastore.store/commit-data, :variadic false, :file "src/cljs/offcourse/datastore/store.cljs", :end-column 18, :method-params ([p__26718]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{type :type, :as payload}]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:checkpoint :new :courses :type :collections :checkpoint-id :course-ids :course :resource :collection-name :collection-ids :course-id :collection}, :order [:collection-name :collection-ids :courses :course-ids :course :course-id :checkpoint-id :resource :checkpoint :new :collections :collection :type]}, :doc nil}